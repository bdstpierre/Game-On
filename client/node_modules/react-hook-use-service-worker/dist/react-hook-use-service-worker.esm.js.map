{"version":3,"file":"react-hook-use-service-worker.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { register, unregister } from 'register-service-worker';\n\nexport const SERVICE_WORKER_READY = 'SERVICE_WORKER_READY';\nexport const SERVICE_WORKER_REGISTERED = 'SERVICE_WORKER_REGISTERED';\nexport const SERVICE_WORKER_CACHED = 'SERVICE_WORKER_CACHED';\nexport const SERVICE_WORKER_UPDATE_FOUND = 'SERVICE_WORKER_UPDATE_FOUND';\nexport const SERVICE_WORKER_OFFLINE = 'SERVICE_WORKER_OFFLINE';\nexport const SERVICE_WORKER_UPDATE_READY = 'SERVICE_WORKER_UPDATE_READY';\nexport const SERVICE_WORKER_ERROR = 'SERVICE_WORKER_ERROR';\n\ninterface ServiceWorkerReady {\n  type: typeof SERVICE_WORKER_READY;\n  payload: ServiceWorker;\n}\ninterface ServiceWorkerRegistered {\n  type: typeof SERVICE_WORKER_REGISTERED;\n  payload: ServiceWorker;\n}\ninterface ServiceWorkerCached {\n  type: typeof SERVICE_WORKER_CACHED;\n  payload: ServiceWorker;\n}\ninterface ServiceWorkerUpdateFound {\n  type: typeof SERVICE_WORKER_UPDATE_FOUND;\n  payload: ServiceWorker;\n}\ninterface ServiceWorkerOffline {\n  type: typeof SERVICE_WORKER_OFFLINE;\n  payload: ServiceWorker;\n}\ninterface ServiceWorkerUpdateReady {\n  type: typeof SERVICE_WORKER_UPDATE_READY;\n  payload: ServiceWorker;\n}\ninterface ServiceWorkerError {\n  type: typeof SERVICE_WORKER_ERROR;\n  payload: ServiceWorker;\n}\n\nexport type ServiceWorkerActionTypes =\n  | ServiceWorkerReady\n  | ServiceWorkerRegistered\n  | ServiceWorkerCached\n  | ServiceWorkerUpdateFound\n  | ServiceWorkerOffline\n  | ServiceWorkerUpdateReady\n  | ServiceWorkerError;\n\ntype ServiceWorkerStatus =\n  | 'offline'\n  | 'registered'\n  | 'register'\n  | 'ready'\n  | 'cached'\n  | 'updates'\n  | 'updated'\n  | 'error';\n\nexport interface ServiceWorker {\n  serviceWorkerStatus: ServiceWorkerStatus;\n  registration?: null | ServiceWorkerRegistration;\n  error?: Error;\n}\n\nexport interface ServiceWorkerState {\n  serviceWorkerStatus: ServiceWorkerStatus;\n  registration?: null | ServiceWorkerRegistration;\n  error?: Error;\n}\n\nconst useServiceWorkerReducer = (\n  state: ServiceWorkerState,\n  action: ServiceWorkerActionTypes\n): ServiceWorkerState => {\n  switch (action.type) {\n    case 'SERVICE_WORKER_READY':\n      console.log('Service worker is ready.');\n      return {\n        ...state,\n        serviceWorkerStatus: action.payload.serviceWorkerStatus,\n        registration: action.payload.registration,\n      };\n    case 'SERVICE_WORKER_REGISTERED':\n      console.log('Service worker has been registered.');\n      return {\n        ...state,\n        serviceWorkerStatus: action.payload.serviceWorkerStatus,\n        registration: action.payload.registration,\n      };\n    case 'SERVICE_WORKER_CACHED':\n      console.log('Content has been cached for offline use.');\n      return {\n        ...state,\n        serviceWorkerStatus: action.payload.serviceWorkerStatus,\n        registration: action.payload.registration,\n      };\n    case 'SERVICE_WORKER_UPDATE_FOUND':\n      console.log('New content is downloading.');\n      return {\n        ...state,\n        serviceWorkerStatus: action.payload.serviceWorkerStatus,\n        registration: action.payload.registration,\n      };\n    case 'SERVICE_WORKER_UPDATE_READY':\n      console.log('New content is available; please refresh.');\n      return {\n        ...state,\n        serviceWorkerStatus: action.payload.serviceWorkerStatus,\n        registration: action.payload.registration,\n      };\n    case 'SERVICE_WORKER_OFFLINE':\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n      return {\n        ...state,\n        serviceWorkerStatus: action.payload.serviceWorkerStatus,\n      };\n    case 'SERVICE_WORKER_ERROR':\n      console.error(\n        'Error during service worker registration:',\n        action.payload.error\n      );\n      return {\n        ...state,\n        serviceWorkerStatus: action.payload.serviceWorkerStatus,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initialState: ServiceWorkerState = {\n  registration: null,\n  serviceWorkerStatus: 'register',\n};\nconst serviceWorkerContext = React.createContext(initialState);\n\nexport function ProvideServiceWorker({\n  children,\n  fileName,\n}: {\n  children: React.ReactNode;\n  fileName: string;\n}) {\n  const serviceWorker = useProvideServiceWorker(fileName);\n  return (\n    <serviceWorkerContext.Provider value={serviceWorker}>\n      {children}\n    </serviceWorkerContext.Provider>\n  );\n}\n\nexport const useServiceWorker = () => {\n  return React.useContext(serviceWorkerContext);\n};\n\nconst useProvideServiceWorker = (file = 'sw.js') => {\n  const [swState, dispatch] = React.useReducer(\n    useServiceWorkerReducer,\n    initialState\n  );\n  React.useEffect(() => {\n    register(file, {\n      ready: registration => {\n        dispatch({\n          type: 'SERVICE_WORKER_READY',\n          payload: { serviceWorkerStatus: 'ready', registration },\n        });\n      },\n      registered: registration => {\n        dispatch({\n          type: 'SERVICE_WORKER_REGISTERED',\n          payload: { serviceWorkerStatus: 'registered', registration },\n        });\n      },\n      cached: registration => {\n        dispatch({\n          type: 'SERVICE_WORKER_REGISTERED',\n          payload: { serviceWorkerStatus: 'cached', registration },\n        });\n      },\n      updatefound: registration => {\n        dispatch({\n          type: 'SERVICE_WORKER_UPDATE_FOUND',\n          payload: { serviceWorkerStatus: 'updates', registration },\n        });\n      },\n      updated: registration =>\n        dispatch({\n          type: 'SERVICE_WORKER_UPDATE_READY',\n          payload: { serviceWorkerStatus: 'updated', registration },\n        }),\n      offline: () => {\n        dispatch({\n          type: 'SERVICE_WORKER_OFFLINE',\n          payload: { serviceWorkerStatus: 'offline' },\n        });\n      },\n      error: error =>\n        dispatch({\n          type: 'SERVICE_WORKER_OFFLINE',\n          payload: { serviceWorkerStatus: 'error', error },\n        }),\n    });\n    return () => {\n      unregister();\n    };\n  }, []);\n\n  return swState;\n};\n"],"names":["SERVICE_WORKER_READY","SERVICE_WORKER_REGISTERED","SERVICE_WORKER_CACHED","SERVICE_WORKER_UPDATE_FOUND","SERVICE_WORKER_OFFLINE","SERVICE_WORKER_UPDATE_READY","SERVICE_WORKER_ERROR","useServiceWorkerReducer","state","action","type","console","log","serviceWorkerStatus","payload","registration","error","initialState","serviceWorkerContext","React","ProvideServiceWorker","children","fileName","serviceWorker","useProvideServiceWorker","Provider","value","useServiceWorker","file","swState","dispatch","register","ready","registered","cached","updatefound","updated","offline","unregister"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAIaA,oBAAoB,GAAG;IACvBC,yBAAyB,GAAG;IAC5BC,qBAAqB,GAAG;IACxBC,2BAA2B,GAAG;IAC9BC,sBAAsB,GAAG;IACzBC,2BAA2B,GAAG;IAC9BC,oBAAoB,GAAG;;AA8DpC,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAC9BC,KAD8B,EAE9BC,MAF8B;AAI9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,0BACKJ,KADL;AAEEK,QAAAA,mBAAmB,EAAEJ,MAAM,CAACK,OAAP,CAAeD,mBAFtC;AAGEE,QAAAA,YAAY,EAAEN,MAAM,CAACK,OAAP,CAAeC;AAH/B;;AAKF,SAAK,2BAAL;AACEJ,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA,0BACKJ,KADL;AAEEK,QAAAA,mBAAmB,EAAEJ,MAAM,CAACK,OAAP,CAAeD,mBAFtC;AAGEE,QAAAA,YAAY,EAAEN,MAAM,CAACK,OAAP,CAAeC;AAH/B;;AAKF,SAAK,uBAAL;AACEJ,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACA,0BACKJ,KADL;AAEEK,QAAAA,mBAAmB,EAAEJ,MAAM,CAACK,OAAP,CAAeD,mBAFtC;AAGEE,QAAAA,YAAY,EAAEN,MAAM,CAACK,OAAP,CAAeC;AAH/B;;AAKF,SAAK,6BAAL;AACEJ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,0BACKJ,KADL;AAEEK,QAAAA,mBAAmB,EAAEJ,MAAM,CAACK,OAAP,CAAeD,mBAFtC;AAGEE,QAAAA,YAAY,EAAEN,MAAM,CAACK,OAAP,CAAeC;AAH/B;;AAKF,SAAK,6BAAL;AACEJ,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACA,0BACKJ,KADL;AAEEK,QAAAA,mBAAmB,EAAEJ,MAAM,CAACK,OAAP,CAAeD,mBAFtC;AAGEE,QAAAA,YAAY,EAAEN,MAAM,CAACK,OAAP,CAAeC;AAH/B;;AAKF,SAAK,wBAAL;AACEJ,MAAAA,OAAO,CAACC,GAAR,CACE,+DADF;AAGA,0BACKJ,KADL;AAEEK,QAAAA,mBAAmB,EAAEJ,MAAM,CAACK,OAAP,CAAeD;AAFtC;;AAIF,SAAK,sBAAL;AACEF,MAAAA,OAAO,CAACK,KAAR,CACE,2CADF,EAEEP,MAAM,CAACK,OAAP,CAAeE,KAFjB;AAIA,0BACKR,KADL;AAEEK,QAAAA,mBAAmB,EAAEJ,MAAM,CAACK,OAAP,CAAeD;AAFtC;;AAKF;AACE,aAAOL,KAAP;AAvDJ;AAyDD,CA7DD;;AA+DA,IAAMS,YAAY,GAAuB;AACvCF,EAAAA,YAAY,EAAE,IADyB;AAEvCF,EAAAA,mBAAmB,EAAE;AAFkB,CAAzC;AAIA,IAAMK,oBAAoB;AAAA;AAAGC,aAAA,CAAoBF,YAApB,CAA7B;SAEgBG;MACdC,gBAAAA;MACAC,gBAAAA;AAKA,MAAMC,aAAa,GAAGC,uBAAuB,CAACF,QAAD,CAA7C;AACA,SACEH,aAAA,CAACD,oBAAoB,CAACO,QAAtB;AAA+BC,IAAAA,KAAK,EAAEH;GAAtC,EACGF,QADH,CADF;AAKD;IAEYM,gBAAgB,GAAG,SAAnBA,gBAAmB;AAC9B,SAAOR,UAAA,CAAiBD,oBAAjB,CAAP;AACD;;AAED,IAAMM,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACI,IAAD;MAACA;AAAAA,IAAAA,OAAO;;;0BACVT,UAAA,CAC1BZ,uBAD0B,EAE1BU,YAF0B;MAArBY;MAASC;;AAIhBX,EAAAA,SAAA,CAAgB;AACdY,IAAAA,QAAQ,CAACH,IAAD,EAAO;AACbI,MAAAA,KAAK,EAAE,eAAAjB,YAAY;AACjBe,QAAAA,QAAQ,CAAC;AACPpB,UAAAA,IAAI,EAAE,sBADC;AAEPI,UAAAA,OAAO,EAAE;AAAED,YAAAA,mBAAmB,EAAE,OAAvB;AAAgCE,YAAAA,YAAY,EAAZA;AAAhC;AAFF,SAAD,CAAR;AAID,OANY;AAObkB,MAAAA,UAAU,EAAE,oBAAAlB,YAAY;AACtBe,QAAAA,QAAQ,CAAC;AACPpB,UAAAA,IAAI,EAAE,2BADC;AAEPI,UAAAA,OAAO,EAAE;AAAED,YAAAA,mBAAmB,EAAE,YAAvB;AAAqCE,YAAAA,YAAY,EAAZA;AAArC;AAFF,SAAD,CAAR;AAID,OAZY;AAabmB,MAAAA,MAAM,EAAE,gBAAAnB,YAAY;AAClBe,QAAAA,QAAQ,CAAC;AACPpB,UAAAA,IAAI,EAAE,2BADC;AAEPI,UAAAA,OAAO,EAAE;AAAED,YAAAA,mBAAmB,EAAE,QAAvB;AAAiCE,YAAAA,YAAY,EAAZA;AAAjC;AAFF,SAAD,CAAR;AAID,OAlBY;AAmBboB,MAAAA,WAAW,EAAE,qBAAApB,YAAY;AACvBe,QAAAA,QAAQ,CAAC;AACPpB,UAAAA,IAAI,EAAE,6BADC;AAEPI,UAAAA,OAAO,EAAE;AAAED,YAAAA,mBAAmB,EAAE,SAAvB;AAAkCE,YAAAA,YAAY,EAAZA;AAAlC;AAFF,SAAD,CAAR;AAID,OAxBY;AAyBbqB,MAAAA,OAAO,EAAE,iBAAArB,YAAY;AAAA,eACnBe,QAAQ,CAAC;AACPpB,UAAAA,IAAI,EAAE,6BADC;AAEPI,UAAAA,OAAO,EAAE;AAAED,YAAAA,mBAAmB,EAAE,SAAvB;AAAkCE,YAAAA,YAAY,EAAZA;AAAlC;AAFF,SAAD,CADW;AAAA,OAzBR;AA8BbsB,MAAAA,OAAO,EAAE;AACPP,QAAAA,QAAQ,CAAC;AACPpB,UAAAA,IAAI,EAAE,wBADC;AAEPI,UAAAA,OAAO,EAAE;AAAED,YAAAA,mBAAmB,EAAE;AAAvB;AAFF,SAAD,CAAR;AAID,OAnCY;AAoCbG,MAAAA,KAAK,EAAE,eAAAA,MAAK;AAAA,eACVc,QAAQ,CAAC;AACPpB,UAAAA,IAAI,EAAE,wBADC;AAEPI,UAAAA,OAAO,EAAE;AAAED,YAAAA,mBAAmB,EAAE,OAAvB;AAAgCG,YAAAA,KAAK,EAALA;AAAhC;AAFF,SAAD,CADE;AAAA;AApCC,KAAP,CAAR;AA0CA,WAAO;AACLsB,MAAAA,UAAU;AACX,KAFD;AAGD,GA9CD,EA8CG,EA9CH;AAgDA,SAAOT,OAAP;AACD,CAtDD;;;;"}