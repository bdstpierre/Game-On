{"version":3,"sources":["reportWebVitals.js","utils/auth.js","components/HomePage.js","utils/queries.js","components/UserPage.js","utils/mutations.js","components/Login.js","components/SignUp.js","components/ChallengeCreate.js","components/ChallengePage.js","components/FindUser.js","App.js","index.js","reducers/index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","HomePage","Card","Img","src","alt","ImgOverlay","className","variant","Body","Title","Text","Button","type","Link","href","Component","QUERY_SCOREBOARD","gql","UserPage","useQuery","loading","data","console","log","name","Auth","getProfile","compArray","scoreboard","winComps","filter","comp","victor","resultsConfirmed","lossComps","wins","length","loss","Form","Figure","Image","width","height","Table","striped","bordered","hover","size","Dropdown","Toggle","id","Menu","Item","LOGIN_USER","ADD_USER","Login","props","useState","email","password","formState","setFormState","useMutation","login","handleFormSubmit","error","event","a","preventDefault","variables","mutationResponse","handleChange","target","value","onSubmit","Group","controlId","Label","Control","placeholder","onChange","SignUp","zipCode","addUser","ChallengeCreate","for","ChallengePage","FindUser","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","Navbar","bg","Container","Brand","Nav","loggedIn","onClick","logout","fluid","Row","Col","exact","path","component","loggerMIddleware","createLogger","store","createStore","state","applyMiddleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2c3c3f53.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\n\n\n\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <>\n       \n      \n      <Card>\n        <Card.Img src=\"/img/862202--1-@1x.png\" alt=\"Carad image\" />\n        <Card.ImgOverlay>\n        <h1 className=\"text-center text-white\">Welcome To Game On; This is the Main Info Page</h1>\n        <Card.Img variant=\"top\" src=\"/img/gameonlogo-2@1x.png\" />\n        <Card.Body className=\"text-white\">\n          <Card.Title>The Spit-and-a-Handshake App</Card.Title>\n            <Card.Text>\n             Do you want to challenge someone to a duel? (Well, maybe not a REAL duel...)\n\n             How about a friendly game of \"H-O-R-S-E\"? A quick tennis match? A round of 8-Ball? \n\n             Game-On can help you organize, and keep track of, your bets and challenges with friends. \n\n             Just signup, or login, create a challenge, and find a friend to prove you're competitive prowess.\n            </Card.Text>\n        </Card.Body>\n        <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button>\n\n        <Card.Body>\n          <Card.Link className=\"text-center\" href=\"/SignUp\">Don't have an account? Click here!</Card.Link>\n        </Card.Body>\n        </Card.ImgOverlay>\n      </Card>\n      \n      </>\n    )\n  }\n}\n\nexport default HomePage\n\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query users {\n    users {\n      _id\n      name\n      email\n      zipCode\n    }\n  }\n`;\n\nexport const QUERY_CATEGORY = gql`\n  query categorys($_id: String) {\n      categorys(_id: $_id) {\n        _id\n        name\n      }\n  }\n  `;\n\nexport const QUERY_COMPETITION = gql`\n  query competitions($_id: String) {\n    competitions(_id: $_id) {\n        _id\n        name\n        location\n        category\n        organizer\n        challenged\n        challengedAccept\n        date\n        victor\n        organizerScore\n        challengedScore\n        category\n        status\n        statName\n        statValue\n        resultsConfirmed\n    }\n  }\n`;\n\nexport const QUERY_SCOREBOARD = gql`\n  query scoreboard {\n    scoreboard {\n      _id\n      name\n      location\n      organizer\n      challenged\n      challengedAccept\n      date\n      victor\n      organizerScore\n      challengedScore\n      category\n      status\n      resultsConfirmed\n    }\n  }\n`;","import React, { Component, useState } from 'react';\nimport { useQuery} from '@apollo/client';\nimport { QUERY_SCOREBOARD } from '../utils/queries'\nimport Auth from '../utils/auth'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Figure from 'react-bootstrap/Figure'\nimport Table from 'react-bootstrap/Table'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\n// class UserPage extends Component {\n//   render() {\n\nconst UserPage = () => {\n\n  const { loading, data } = useQuery(QUERY_SCOREBOARD);\n  console.log(data)\n  \n  let userData = Auth.getProfile();\n  let name = userData.data.name;\n  console.log(name);\n  \n  let compArray = data.scoreboard\n  console.log(compArray);\n  let winComps = compArray.filter(comp => comp.victor === name && comp.resultsConfirmed === true);\n  let lossComps = compArray.filter(comp => !comp.victor === name && comp.resultsConfirmed === true);\n  \n  const wins = winComps.length\n  const loss = lossComps.length\n\n  if (loading) {\n    return <h2>LOADING...</h2>\n  }\n\n    return (\n      <>\n      <Card>\n      <Card.Img src=\"/img/343962@1x.png\" alt=\"Card image\" />\n        <Card.ImgOverlay>\n\n      <h1 className=\"text-center text-white\">Profile</h1>\n     <Form className=\"signUp-form text-white\">\n      <Figure>\n        <Figure.Image\n         width={171}\n          height={180}\n          alt=\"171x180\"\n          src=\"/img/profileavatar.png\"\n          />\n      </Figure>\n        <h1 className=\"font-weight-bold text-center text-white\">Ian Hennessey\n        </h1>\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>Wins</th>\n              <th>Loses</th>\n              <th>Ties</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{wins}</td>\n              <td>{loss}</td>\n              <td>2</td>\n            </tr>\n          </tbody>\n        </Table>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Current Challenges\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Previous Challenges\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <Button className=\"btn-lg\">\n          Challenge Someone\n         </Button>\n       \n      \n\n      </Form>\n\n      </Card.ImgOverlay>\n\n      </Card>\n      </>\n    )\n\n  }\n// }\n\nexport default UserPage","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login(\n    $email: String!, \n    $password: String!) {\n    login(\n      email: $email, \n      password: $password) {\n        token\n        user {\n          _id\n          name\n      }\n    }\n  }\n`;\n\n// firstName - lastName?\nexport const ADD_USER = gql`\n  mutation addUser( \n    $name: String!, \n    $email: String!,\n    $password: String!, \n    $zipCode: String!) {\n    addUser( \n      name: $name, \n      email: $email,\n      password: $password,\n      zipCode: $zipCode) {\n        token\n        user {\n        _id\n        name\n        email\n        zipCode\n      }\n    }\n  }\n`;\n\nexport const CREATE_CATEGORY = gql`\n  mutation createCategory(\n    $_id: String!, \n    $name: String!) {\n    createCategory(\n      _id: $_id, \n      name: $name) {\n        _id\n        name\n    }\n  }\n`;\n\nexport const CREATE_COMPETITION = gql`\n  mutation createCompetition(\n    $_id: String!, \n    $name: String!, \n    $location: String!, \n    $organizer: String!, \n    $challenged: String!,\n    $date: Date!,\n    $category: String!) {\n    createCompetition(\n      _id: $_id, \n      name: $name, \n      location: $location, \n      organizer: $organizer, \n      challenged: $challenged, \n      date: $date,\n      category: $category) {\n        _id\n        name\n        location\n        category\n        organizer\n        challenged\n        challengedAccepted\n        date\n    }\n  }\n`;\n\nexport const UPDATE_COMPETITION = gql`\n  mutation udpateCompetition(\n    $_id: String!, \n    $victor: String!, \n    $organizerScore: String!, \n    $challengedScore: String!, \n    $status: String!) {\n    updateCompetition(\n      _id: $_id, \n      victor: $victor, \n      organizerScore: $organizerScore, \n      challengedScore: $challengedScore, \n      status: $status) {\n        _id\n        victor\n        organizerScore\n        challengedScore\n        status\n    }\n  }\n`;\n\nexport const CONFIRM_COMPETITION = gql`\n  mutation confirmCompetition(\n    $_id: String!, \n    $resultsConfirmed: Boolean!) {\n    confirmCompetition(\n      _id: $_id, \n      resultsConfirmed: $resultsConfirmed) {\n        _id\n        resultsConfirmed\n    }\n  }\n`;\n\nexport const CREATE_STATS = gql`\n  mutation createStats(\n    $_id: String!, \n    $statValue: String!) {\n      createStats(\n        _id: $_id,  \n        statValue: $statValue) {\n          _id\n          statValue\n    }\n  }\n`;","\nimport React, { Component, useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from \"react-router-dom\";\nimport \"./LoginWeb.css\";\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n    return (\n      <Card>\n        <Card.Img src=\"/img/862202--1-@1x.png\" alt=\"Carad image\" />\n        <Card.ImgOverlay>\n        <Card.Img variant=\"top\" src=\"/img/gameonlogo-2@1x.png\" />\n        <Card.Body>\n        <Form onSubmit={handleFormSubmit}>\n          <Form.Group className=\"mb-3 text-white\" controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control   \n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange} />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3 text-white\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control    \n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n        </Card.Body>\n        <Card.Body>\n          <Card.Link className=\"text-center\" href=\"/SignUp\">Don't have an account? Click here!</Card.Link>\n        </Card.Body>\n        </Card.ImgOverlay>\n      </Card>\n    );\n  };\n\nexport default Login","import React, { Component, useState } from 'react';\nimport { useMutation } from '@apollo/client';\n// import \"./LoginWeb.css\";\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\n\nfunction SignUp(props) {\n  const [formState, setFormState] = useState({ name: '', email: '', password: '', zipCode: '' });\n  const [SignUp, { error }] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await SignUp({\n        variables: { name: formState.name, email: formState.email, password: formState.password, zipCode: formState.zipCode },\n      });\n      const token = mutationResponse.data.addUser.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n    return (\n      <>\n      <Card>\n      <Card.Img src=\"/img/862202--1-@1x.png\" alt=\"Card image\" />\n        <Card.ImgOverlay>\n\n      <Form onSubmit={handleFormSubmit} className=\"SignUp-form\">\n        <h1 className=\"font-weight-bold text-center text-white\">Game On Sign-Up Page\n        </h1>\n        <Form.Group>\n          <Form.Label>Full Name</Form.Label>\n          <Form.Control \n          type=\"name\" \n          placeholder=\"Full Name\"\n          name=\"name\"\n          id=\"email\"\n          onChange={handleChange} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control           \n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Zip Code</Form.Label>\n          <Form.Control \n            type=\"text\" \n            placeholder=\"Zip Code\"\n            name=\"zipCode\"\n            id=\"email\"/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control     \n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"password\"\n            onChange={handleChange}/>\n      </Form.Group>\n        <Button type=\"submit\" className=\"btn-lg btn-dark btn-block\">\n          Sign Up\n        </Button>\n\n      </Form>\n\n      </Card.ImgOverlay>\n\n      </Card>\n      </>\n    );\n  }\n\nexport default SignUp;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\n\nclass ChallengeCreate extends Component {\n  render() {\n\n    return (\n      <>\n      <Card>\n      <Card.Img src=\"/img/862202--1-@1x.png\" alt=\"Card image\" />\n        <Card.ImgOverlay>\n\n      <h1 className=\"text-center text-white\">Here is page to Create a Challenge</h1>\n     <Form className=\"signUp-form text-white\">\n        <h1 className=\"font-weight-bold text-center text-white\">Matchup\n        </h1>\n        <h6 className=\"font-weight-bold text-center text-white\">\n          IAN H. VS. DANIEL S.\n        </h6>\n        <Form.Group>\n          <Form.Label></Form.Label>\n          <Form.Control type=\"name\" placeholder=\"Sports\"/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label></Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Pool\"/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label></Form.Label>\n          <Form.Control type=\"text\" placeholder=\"8-Ball\"/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label></Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Billiards\"/>\n        </Form.Group>\n        <Form.Group>\n        <Form.Label for=\"exampleSearch\"></Form.Label>\n          <Form.Control\n          type=\"search\"\n          name=\"search\"\n          id=\"exampleSearch\"\n          placeholder=\"search\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label></Form.Label>\n        </Form.Group>\n        <Button className=\"btn-lg\">\n          Create Matchup\n         </Button>\n       \n      \n\n      </Form>\n\n      </Card.ImgOverlay>\n\n      </Card>\n\n\n\n\n\n\n\n\n\n     \n      </>\n    )\n\n  }\n}\n\nexport default ChallengeCreate\n\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nclass ChallengePage extends Component {\n  render() {\n\n    return (\n      <>\n      <Card>\n      <Card.Img src=\"/img/697142-1@1x.png\" alt=\"Card image\" />\n        <Card.ImgOverlay>\n\n      <h1 className=\"text-center text-white\">8-Ball</h1>\n     <Form className=\"signUp-form text-white\">\n        <h1 className=\"font-weight-bold text-center text-white\">Ian Hennessey vs. Diana Daghlas\n        </h1>\n      \n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Who won?\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item href=\"#/action-1\">Ian Hennessey</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-2\">Diana Daghlas</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-3\">Tie</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <Form.Group>\n          <Form.Label></Form.Label>\n          <Form.Control type=\"name\" placeholder=\"Was there a score?\"/>\n        </Form.Group>\n\n\n        \n        <Button className=\"btn-lg\">\n          Submit Results\n         </Button>\n       \n      \n\n      </Form>\n\n      </Card.ImgOverlay>\n\n      </Card>\n\n\n\n\n\n\n\n\n\n     \n      </>\n    )\n\n  }\n}\n\nexport default ChallengePage\n\n","import React, { Component } from 'react';\n\nclass FindUser extends Component {\n  render() {\n    return (\n      <>\n\n        <h1>Hi here is our APP</h1>\n      </>\n    )\n    \n    \n  }\n}\n\nexport default FindUser\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink, useQuery } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Auth from './utils/auth';\n\nimport HomePage from './components/HomePage';\nimport UserPage from './components/UserPage';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport ChallengeCreate from './components/ChallengeCreate';\nimport ChallengePage from './components/ChallengePage';\nimport FindUser from './components/FindUser';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    \n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-center align-center min-100-vh bg-secondary\">\n\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Container>\n            <Navbar.Brand href=\"/HomePage\">GameOn</Navbar.Brand>\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"/HomePage\">Home</Nav.Link>\n              <Nav.Link href=\"/UserPage\">UserPage</Nav.Link>\n              {Auth.loggedIn() ? (<Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n              ) : (<Nav.Link href=\"/Login\">Login</Nav.Link>)}\n            </Nav>\n          </Container>\n        </Navbar>\n        \n        <Container fluid>\n          <Row>\n            <Col>\n              <Switch>\n\n                <Route exact path=\"/\" component={HomePage}>\n\n                </Route>\n\n                <Route exact path=\"/signup\" component={SignUp}>\n\n                </Route>\n                   \n                <Route exact path=\"/HomePage\">\n                   <HomePage />\n                </Route>\n\n                <Route exact path=\"/login\">\n                  <Login />\n                </Route>\n\n                <Route exact path=\"/userpage\" component={UserPage}>\n                </Route>\n\n                <Route exact path=\"/userpage/:id\">\n\n                  <UserPage />\n                </Route>\n\n                <Route exact path=\"/finduser\">\n                  <FindUser />\n                </Route>\n\n                <Route exact path=\"/challengecreate\">\n                  <ChallengeCreate />\n                </Route>\n\n                <Route exact path=\"/challengepage\">\n                  <ChallengePage />\n                </Route>\n\n                <Route exact path=\"/challengepage/:id\">\n                  <ChallengePage />\n                </Route>\n              \n              </Switch>\n\n            </Col>\n          </Row>\n        </Container>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport {rootReducer} from './reducers';\nimport {createLogger} from 'redux-logger';\n\nconst loggerMIddleware = createLogger();\n\nconst store = createStore(rootReducer, applyMiddleware(loggerMIddleware)); \n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n\nreportWebVitals();\n","export const rootReducer = (state = {}, action) => {\n  return state;\n}"],"sourceRoot":""}